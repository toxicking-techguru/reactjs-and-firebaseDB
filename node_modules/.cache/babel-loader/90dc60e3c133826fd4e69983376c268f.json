{"ast":null,"code":"// import { isHTMLElement } from './instanceOf';\nexport default function getBoundingClientRect(element, // eslint-disable-next-line unused-imports/no-unused-vars\nincludeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1; // FIXME:\n  // `offsetWidth` returns an integer while `getBoundingClientRect`\n  // returns a float. This results in `scaleX` or `scaleY` being\n  // non-1 when it should be for elements that aren't a full pixel in\n  // width or height.\n  // if (isHTMLElement(element) && includeScale) {\n  //   const offsetHeight = element.offsetHeight;\n  //   const offsetWidth = element.offsetWidth;\n  //   // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n  //   // Fallback to 1 in case both values are `0`\n  //   if (offsetWidth > 0) {\n  //     scaleX = rect.width / offsetWidth || 1;\n  //   }\n  //   if (offsetHeight > 0) {\n  //     scaleY = rect.height / offsetHeight || 1;\n  //   }\n  // }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}","map":{"version":3,"names":["getBoundingClientRect","element","includeScale","rect","scaleX","scaleY","width","height","top","right","bottom","left","x","y"],"sources":["/home/vick/Music/React_Firebase_Auth_Tutorial-master/node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js"],"sourcesContent":["// import { isHTMLElement } from './instanceOf';\nexport default function getBoundingClientRect(element, // eslint-disable-next-line unused-imports/no-unused-vars\nincludeScale) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  var rect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1; // FIXME:\n  // `offsetWidth` returns an integer while `getBoundingClientRect`\n  // returns a float. This results in `scaleX` or `scaleY` being\n  // non-1 when it should be for elements that aren't a full pixel in\n  // width or height.\n  // if (isHTMLElement(element) && includeScale) {\n  //   const offsetHeight = element.offsetHeight;\n  //   const offsetWidth = element.offsetWidth;\n  //   // Do not attempt to divide by 0, otherwise we get `Infinity` as scale\n  //   // Fallback to 1 in case both values are `0`\n  //   if (offsetWidth > 0) {\n  //     scaleX = rect.width / offsetWidth || 1;\n  //   }\n  //   if (offsetHeight > 0) {\n  //     scaleY = rect.height / offsetHeight || 1;\n  //   }\n  // }\n\n  return {\n    width: rect.width / scaleX,\n    height: rect.height / scaleY,\n    top: rect.top / scaleY,\n    right: rect.right / scaleX,\n    bottom: rect.bottom / scaleY,\n    left: rect.left / scaleX,\n    x: rect.left / scaleX,\n    y: rect.top / scaleY\n  };\n}"],"mappings":"AAAA;AACA,eAAe,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AACvDC,YADe,EACD;EACZ,IAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;IAC3BA,YAAY,GAAG,KAAf;EACD;;EAED,IAAIC,IAAI,GAAGF,OAAO,CAACD,qBAAR,EAAX;EACA,IAAII,MAAM,GAAG,CAAb;EACA,IAAIC,MAAM,GAAG,CAAb,CAPY,CAOI;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OAAO;IACLC,KAAK,EAAEH,IAAI,CAACG,KAAL,GAAaF,MADf;IAELG,MAAM,EAAEJ,IAAI,CAACI,MAAL,GAAcF,MAFjB;IAGLG,GAAG,EAAEL,IAAI,CAACK,GAAL,GAAWH,MAHX;IAILI,KAAK,EAAEN,IAAI,CAACM,KAAL,GAAaL,MAJf;IAKLM,MAAM,EAAEP,IAAI,CAACO,MAAL,GAAcL,MALjB;IAMLM,IAAI,EAAER,IAAI,CAACQ,IAAL,GAAYP,MANb;IAOLQ,CAAC,EAAET,IAAI,CAACQ,IAAL,GAAYP,MAPV;IAQLS,CAAC,EAAEV,IAAI,CAACK,GAAL,GAAWH;EART,CAAP;AAUD"},"metadata":{},"sourceType":"module"}